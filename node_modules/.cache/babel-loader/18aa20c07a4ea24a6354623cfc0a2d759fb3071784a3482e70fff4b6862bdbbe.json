{"ast":null,"code":"var _jsxFileName = \"/Users/elyhlapetina/Documents/GitHub/FinView/src/Components/StockData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockData = ({\n  tickersymbol\n}) => {\n  _s();\n  const [interval, setInterval] = useState('daily'); // Default time interval\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const apiKey = '565BBFBEFMPCFMLO';\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const myCookieExists = doesCookieExist(tickersymbol);\n      if (myCookieExists) {\n        // Execute your code here if the cookie exists\n        console.log('The cookie exists. ', tickersymbol);\n        const stock_value_from_cookie = Cookies.get(tickersymbol);\n        console.log(JSON.parse(stock_value_from_cookie));\n\n        // You can do more here, such as setting state or performing other actions\n      } else {\n        console.log('The cookie does not exist. ', tickersymbol);\n        const apiUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_${interval.toUpperCase()}&symbol=${tickersymbol}&apikey=${apiKey}`;\n        console.log(apiUrl);\n        fetch('http://localhost:3001/add-stock-ticker', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            ticker: 'AAPL'\n          })\n        }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        // Alpha Vantage organizes data by date, so you can access it easily.\n        setStockData(data['Time Series (Daily)']); // Adjust the key if using a different interval.\n        Cookies.set(tickersymbol, JSON.stringify(data), {\n          expires: 7,\n          path: ''\n        });\n\n        // check to make sure the cookie was actually created. Otherwise use local storage.\n        if (doesCookieExist(tickersymbol)) {\n          console.log('yo that shit failed.');\n        } else {\n          localStorage.setItem(tickersymbol, 'value');\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Function to check if a cookie exists\n  const doesCookieExist = cookieName => {\n    console.log('Checking the cookie:', cookieName);\n    const cookieValue = Cookies.get(cookieName);\n    return cookieValue !== undefined;\n  };\n\n  // Use the useEffect hook to watch for changes in the parentState prop.\n  useEffect(() => {\n    // Perform actions or update component state when parentState changes.\n    console.log('Stock Ticker has changed:', tickersymbol);\n    fetchData();\n  }, [tickersymbol]); // The effect will only run when parentState changes.\n\n  const data = {\n    labels: ['January', 'February', 'March', 'April', 'May'],\n    datasets: [{\n      label: 'Sample Data',\n      data: [12, 19, 3, 5, 2],\n      fill: false,\n      // Fill under the line\n      borderColor: 'rgba(75, 192, 192, 1)',\n      // Line color\n      borderWidth: 2 // Line width\n    }]\n  };\n\n  // Chart.js options\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stock data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : stockData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(stockData).map(([date, values]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Date: \", date, \", Close Price: \", values['4. close']]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stock data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(StockData, \"UDMUXS6c9Ip7gdtiC1Un+ptIHL0=\");\n_c = StockData;\nexport default StockData;\nvar _c;\n$RefreshReg$(_c, \"StockData\");","map":{"version":3,"names":["React","useState","useEffect","Line","Cookies","jsxDEV","_jsxDEV","StockData","tickersymbol","_s","interval","setInterval","stockData","setStockData","loading","setLoading","apiKey","fetchData","myCookieExists","doesCookieExist","console","log","stock_value_from_cookie","get","JSON","parse","apiUrl","toUpperCase","fetch","method","headers","body","stringify","ticker","then","response","json","data","catch","error","set","expires","path","localStorage","setItem","cookieName","cookieValue","undefined","labels","datasets","label","fill","borderColor","borderWidth","options","scales","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","date","values","_c","$RefreshReg$"],"sources":["/Users/elyhlapetina/Documents/GitHub/FinView/src/Components/StockData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Cookies from 'js-cookie';\n\nconst StockData = ({ tickersymbol }) => {\n\n  const [interval, setInterval] = useState('daily'); // Default time interval\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const apiKey = '565BBFBEFMPCFMLO';\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n\n      const myCookieExists = doesCookieExist(tickersymbol);\n      if (myCookieExists) {\n        // Execute your code here if the cookie exists\n        console.log('The cookie exists. ', tickersymbol);\n        const stock_value_from_cookie = Cookies.get(tickersymbol);\n        console.log(JSON.parse(stock_value_from_cookie))\n\n        // You can do more here, such as setting state or performing other actions\n\n      } else {\n        console.log('The cookie does not exist. ', tickersymbol);\n        const apiUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_${interval.toUpperCase()}&symbol=${tickersymbol}&apikey=${apiKey}`;\n        console.log(apiUrl);\n        fetch('http://localhost:3001/add-stock-ticker', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ ticker: 'AAPL' }),\n        })\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .catch(error => console.error('Error:', error));\n\n\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n         // Alpha Vantage organizes data by date, so you can access it easily.\n         setStockData(data['Time Series (Daily)']); // Adjust the key if using a different interval.\n         Cookies.set(tickersymbol, JSON.stringify(data), { expires: 7, path: '' });\n\n         // check to make sure the cookie was actually created. Otherwise use local storage.\n         if (doesCookieExist(tickersymbol)){\n            console.log('yo that shit failed.')\n\n         } else{\n            localStorage.setItem(tickersymbol, 'value');\n         }\n      }\n      setLoading(false);\n\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Function to check if a cookie exists\n  const doesCookieExist = (cookieName) =>  {\n    console.log('Checking the cookie:', cookieName)\n    const cookieValue = Cookies.get(cookieName);\n    return cookieValue !== undefined;\n  }\n\n  // Use the useEffect hook to watch for changes in the parentState prop.\n  useEffect(() => {\n    // Perform actions or update component state when parentState changes.\n    console.log('Stock Ticker has changed:', tickersymbol);\n    fetchData();\n  }, [tickersymbol]); // The effect will only run when parentState changes.\n\n  const data = {\n    labels: ['January', 'February', 'March', 'April', 'May'],\n    datasets: [\n      {\n        label: 'Sample Data',\n        data: [12, 19, 3, 5, 2],\n        fill: false, // Fill under the line\n        borderColor: 'rgba(75, 192, 192, 1)', // Line color\n        borderWidth: 2, // Line width\n      },\n    ],\n  };\n\n  // Chart.js options\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n\n  return (\n    <div>\n      <h2>Stock Data</h2>\n      <div>\n\n      </div>\n      <div>\n\n      </div>\n      {loading ? (\n        <p>Loading stock data...</p>\n      ) : stockData ? (\n        <div>\n          {/* Display stock data here */}\n          {/* You can map through the stockData object and render it as needed */}\n          \n          {Object.entries(stockData).map(([date, values]) => (\n            <div key={date}>\n              Date: {date}, Close Price: {values['4. close']}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No stock data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StockData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}