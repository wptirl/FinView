{"ast":null,"code":"var _jsxFileName = \"/Users/elyhlapetina/Documents/GitHub/FinView/src/Components/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { AgChartsReact } from 'ag-charts-react';\n\n// Chart Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartExample = () => {\n  _s();\n  // Chart Options: Control & configure the chart\n  const [chartOptions, setChartOptions] = useState({\n    // Data: Data to be displayed in the chart\n    data: [{\n      month: 'Jan',\n      avgTemp: 2.3,\n      iceCreamSales: 162000\n    }, {\n      month: 'Mar',\n      avgTemp: 6.3,\n      iceCreamSales: 302000\n    }, {\n      month: 'May',\n      avgTemp: 16.2,\n      iceCreamSales: 800000\n    }, {\n      month: 'Jul',\n      avgTemp: 22.8,\n      iceCreamSales: 1254000\n    }, {\n      month: 'Sep',\n      avgTemp: 14.5,\n      iceCreamSales: 950000\n    }, {\n      month: 'Nov',\n      avgTemp: 8.9,\n      iceCreamSales: 200000\n    }],\n    // Series: Defines which chart type and data to use\n    series: [{\n      type: 'bar',\n      xKey: 'month',\n      yKey: 'iceCreamSales'\n    }]\n  });\n  return (\n    /*#__PURE__*/\n    // AgCharsReact component with options passed as prop\n    _jsxDEV(AgChartsReact, {\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Render component inside root element\n_s(ChartExample, \"xX9ez0wDmp6XzuI2EKFWLXz2cTg=\");\n_c = ChartExample;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ChartExample, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"ChartExample\");","map":{"version":3,"names":["React","useState","ReactDOM","AgChartsReact","jsxDEV","_jsxDEV","ChartExample","_s","chartOptions","setChartOptions","data","month","avgTemp","iceCreamSales","series","type","xKey","yKey","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/Users/elyhlapetina/Documents/GitHub/FinView/src/Components/Chart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { AgChartsReact } from 'ag-charts-react';\n\n// Chart Component\nconst ChartExample = () => {\n  // Chart Options: Control & configure the chart\n  const [chartOptions, setChartOptions] = useState({\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n  });\n\n  return (\n    // AgCharsReact component with options passed as prop\n    <AgChartsReact options={chartOptions} />\n  );\n}\n\n// Render component inside root element\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<ChartExample />);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,iBAAiB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC;IAC/C;IACAS,IAAI,EAAE,CACF;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,EACrD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,EACrD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAO,CAAC,EACtD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAQ,CAAC,EACvD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAO,CAAC,EACtD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,CACxD;IACD;IACAC,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAgB,CAAC;EAChE,CAAC,CAAC;EAEF;IAAA;IACE;IACAZ,OAAA,CAACF,aAAa;MAACe,OAAO,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;AAE5C,CAAC;;AAED;AAAAf,EAAA,CAtBMD,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAuBlB,MAAMkB,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAACvB,OAAA,CAACC,YAAY;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}