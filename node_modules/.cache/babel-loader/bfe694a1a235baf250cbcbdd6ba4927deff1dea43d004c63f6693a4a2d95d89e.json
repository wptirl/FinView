{"ast":null,"code":"var _jsxFileName = \"/Users/elyh/Documents/react-front-end/src/Components/StockData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = ({\n  onSearch\n}) => {\n  _s();\n  const [symbol, setSymbol] = useState('AAPL'); // Default stock symbol (Apple Inc.)\n  const [interval, setInterval] = useState('daily'); // Default time interval\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const apiKey = '565BBFBEFMPCFMLO';\n  const apiUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_${interval.toUpperCase()}&symbol=${symbol}&apikey=${apiKey}`;\n  console.log(apiUrl);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n\n      // Alpha Vantage organizes data by date, so you can access it easily.\n      setStockData(data['Time Series (Daily)']); // Adjust the key if using a different interval.\n\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [symbol, interval]);\n  const onSearchSymbol = () => {\n    onSearchSymbol(searchText);\n  };\n  const handleSymbolChange = e => {\n    setSymbol(e.target.value);\n  };\n  const handleIntervalChange = e => {\n    setInterval(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stock data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : stockData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(stockData).map(([date, values]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Date: \", date, \", Close Price: \", values['4. close']]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stock data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"ds82Okq1CAiy/zQLs5JvsU/TBPo=\");\n_c = SearchBox;\nexport default StockData;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchBox","onSearch","_s","symbol","setSymbol","interval","setInterval","stockData","setStockData","loading","setLoading","apiKey","apiUrl","toUpperCase","console","log","fetchData","response","fetch","data","json","error","onSearchSymbol","searchText","handleSymbolChange","e","target","value","handleIntervalChange","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","date","values","_c","StockData","$RefreshReg$"],"sources":["/Users/elyh/Documents/react-front-end/src/Components/StockData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SearchBox = ({ onSearch }) => {\n  const [symbol, setSymbol] = useState('AAPL'); // Default stock symbol (Apple Inc.)\n  const [interval, setInterval] = useState('daily'); // Default time interval\n  const [stockData, setStockData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const apiKey = '565BBFBEFMPCFMLO';\n  const apiUrl = `https://www.alphavantage.co/query?function=TIME_SERIES_${interval.toUpperCase()}&symbol=${symbol}&apikey=${apiKey}`;\n  console.log(apiUrl)\n  const fetchData = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n\n      // Alpha Vantage organizes data by date, so you can access it easily.\n      setStockData(data['Time Series (Daily)']); // Adjust the key if using a different interval.\n\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [symbol, interval]);\n\n  const onSearchSymbol = () => {\n    onSearchSymbol(searchText);\n  };\n\n  const handleSymbolChange = (e) => {\n    setSymbol(e.target.value);\n  };\n\n  const handleIntervalChange = (e) => {\n    setInterval(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Stock Data</h2>\n      <div>\n\n      </div>\n      <div>\n\n      </div>\n      {loading ? (\n        <p>Loading stock data...</p>\n      ) : stockData ? (\n        <div>\n          {/* Display stock data here */}\n          {/* You can map through the stockData object and render it as needed */}\n          {Object.entries(stockData).map(([date, values]) => (\n            <div key={date}>\n              Date: {date}, Close Price: {values['4. close']}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>No stock data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StockData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}